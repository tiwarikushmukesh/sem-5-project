"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/rehype-remark";
exports.ids = ["vendor-chunks/rehype-remark"];
exports.modules = {

/***/ "(ssr)/./node_modules/rehype-remark/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/rehype-remark/lib/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var hast_util_to_mdast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hast-util-to-mdast */ \"(ssr)/./node_modules/hast-util-to-mdast/lib/index.js\");\n/**\n * @typedef {import('hast-util-to-mdast').Options} Options\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n */\n\n\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new mdast\n * tree (bridge-mode).\n * Without destination, returns the mdast tree: further plugins run on that\n * tree (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `hast-util-to-mdast`.\n */\nconst rehypeRemark =\n  /**\n   * @type {(import('unified').Plugin<[Processor, Options?], HastRoot> & import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>)}\n   */\n  (\n    /**\n     * @param {Processor|Options} [destination]\n     * @param {Options} [options]\n     */\n    function (destination, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {Processor|undefined} */\n      let processor\n\n      if (typeof destination === 'function') {\n        processor = destination\n        settings = options || {}\n      } else {\n        settings = destination || {}\n      }\n\n      if (settings.document === undefined || settings.document === null) {\n        settings = Object.assign({}, settings, {document: true})\n      }\n\n      return processor ? bridge(processor, settings) : mutate(settings)\n    }\n  )\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rehypeRemark);\n\n/**\n * Bridge-mode.\n * Runs the destination with the new mdast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], HastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run((0,hast_util_to_mdast__WEBPACK_IMPORTED_MODULE_0__.toMdast)(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the mdast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>}\n */\nfunction mutate(options = {}) {\n  return (node) => {\n    const result = /** @type {MdastRoot} */ ((0,hast_util_to_mdast__WEBPACK_IMPORTED_MODULE_0__.toMdast)(node, options))\n    return result\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVoeXBlLXJlbWFyay9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsc0NBQXNDO0FBQ25ELGFBQWEscUJBQXFCO0FBQ2xDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsaURBQWlEO0FBQzlEOztBQUUwQzs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQW1CO0FBQ2xDLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0EsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBLGlCQUFpQixxQkFBcUI7QUFDdEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsYUFBYSxlQUFlO0FBQy9EOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpRUFBZSxZQUFZOztBQUUzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkRBQU87QUFDM0I7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLDhCQUE4QixXQUFXLElBQUksMkRBQU87QUFDcEQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vMjhfbm90aW9uLWNsb25lLy4vbm9kZV9tb2R1bGVzL3JlaHlwZS1yZW1hcmsvbGliL2luZGV4LmpzPzU2YTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0LXV0aWwtdG8tbWRhc3QnKS5PcHRpb25zfSBPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuUm9vdH0gSGFzdFJvb3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuUm9vdH0gTWRhc3RSb290XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlmaWVkJykuUHJvY2Vzc29yPGFueSwgYW55LCBhbnksIGFueT59IFByb2Nlc3NvclxuICovXG5cbmltcG9ydCB7dG9NZGFzdH0gZnJvbSAnaGFzdC11dGlsLXRvLW1kYXN0J1xuXG4vKipcbiAqIFBsdWdpbiB0byBicmlkZ2Ugb3IgbXV0YXRlIHRvIHJlaHlwZS5cbiAqXG4gKiBJZiBhIGRlc3RpbmF0aW9uIGlzIGdpdmVuLCBydW5zIHRoZSBkZXN0aW5hdGlvbiB3aXRoIHRoZSBuZXcgbWRhc3RcbiAqIHRyZWUgKGJyaWRnZS1tb2RlKS5cbiAqIFdpdGhvdXQgZGVzdGluYXRpb24sIHJldHVybnMgdGhlIG1kYXN0IHRyZWU6IGZ1cnRoZXIgcGx1Z2lucyBydW4gb24gdGhhdFxuICogdHJlZSAobXV0YXRlLW1vZGUpLlxuICpcbiAqIEBwYXJhbSBkZXN0aW5hdGlvblxuICogICBPcHRpb25hbCB1bmlmaWVkIHByb2Nlc3Nvci5cbiAqIEBwYXJhbSBvcHRpb25zXG4gKiAgIE9wdGlvbnMgcGFzc2VkIHRvIGBoYXN0LXV0aWwtdG8tbWRhc3RgLlxuICovXG5jb25zdCByZWh5cGVSZW1hcmsgPVxuICAvKipcbiAgICogQHR5cGUgeyhpbXBvcnQoJ3VuaWZpZWQnKS5QbHVnaW48W1Byb2Nlc3NvciwgT3B0aW9ucz9dLCBIYXN0Um9vdD4gJiBpbXBvcnQoJ3VuaWZpZWQnKS5QbHVnaW48W09wdGlvbnM/XXx2b2lkW10sIEhhc3RSb290LCBNZGFzdFJvb3Q+KX1cbiAgICovXG4gIChcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge1Byb2Nlc3NvcnxPcHRpb25zfSBbZGVzdGluYXRpb25dXG4gICAgICogQHBhcmFtIHtPcHRpb25zfSBbb3B0aW9uc11cbiAgICAgKi9cbiAgICBmdW5jdGlvbiAoZGVzdGluYXRpb24sIG9wdGlvbnMpIHtcbiAgICAgIC8qKiBAdHlwZSB7T3B0aW9uc3x1bmRlZmluZWR9ICovXG4gICAgICBsZXQgc2V0dGluZ3NcbiAgICAgIC8qKiBAdHlwZSB7UHJvY2Vzc29yfHVuZGVmaW5lZH0gKi9cbiAgICAgIGxldCBwcm9jZXNzb3JcblxuICAgICAgaWYgKHR5cGVvZiBkZXN0aW5hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwcm9jZXNzb3IgPSBkZXN0aW5hdGlvblxuICAgICAgICBzZXR0aW5ncyA9IG9wdGlvbnMgfHwge31cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldHRpbmdzID0gZGVzdGluYXRpb24gfHwge31cbiAgICAgIH1cblxuICAgICAgaWYgKHNldHRpbmdzLmRvY3VtZW50ID09PSB1bmRlZmluZWQgfHwgc2V0dGluZ3MuZG9jdW1lbnQgPT09IG51bGwpIHtcbiAgICAgICAgc2V0dGluZ3MgPSBPYmplY3QuYXNzaWduKHt9LCBzZXR0aW5ncywge2RvY3VtZW50OiB0cnVlfSlcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByb2Nlc3NvciA/IGJyaWRnZShwcm9jZXNzb3IsIHNldHRpbmdzKSA6IG11dGF0ZShzZXR0aW5ncylcbiAgICB9XG4gIClcblxuZXhwb3J0IGRlZmF1bHQgcmVoeXBlUmVtYXJrXG5cbi8qKlxuICogQnJpZGdlLW1vZGUuXG4gKiBSdW5zIHRoZSBkZXN0aW5hdGlvbiB3aXRoIHRoZSBuZXcgbWRhc3QgdHJlZS5cbiAqXG4gKiBAdHlwZSB7aW1wb3J0KCd1bmlmaWVkJykuUGx1Z2luPFtQcm9jZXNzb3IsIE9wdGlvbnM/XSwgSGFzdFJvb3Q+fVxuICovXG5mdW5jdGlvbiBicmlkZ2UoZGVzdGluYXRpb24sIG9wdGlvbnMpIHtcbiAgcmV0dXJuIChub2RlLCBmaWxlLCBuZXh0KSA9PiB7XG4gICAgZGVzdGluYXRpb24ucnVuKHRvTWRhc3Qobm9kZSwgb3B0aW9ucyksIGZpbGUsIChlcnJvcikgPT4ge1xuICAgICAgbmV4dChlcnJvcilcbiAgICB9KVxuICB9XG59XG5cbi8qKlxuICogTXV0YXRlLW1vZGUuXG4gKiBGdXJ0aGVyIHRyYW5zZm9ybWVycyBydW4gb24gdGhlIG1kYXN0IHRyZWUuXG4gKlxuICogQHR5cGUge2ltcG9ydCgndW5pZmllZCcpLlBsdWdpbjxbT3B0aW9ucz9dfHZvaWRbXSwgSGFzdFJvb3QsIE1kYXN0Um9vdD59XG4gKi9cbmZ1bmN0aW9uIG11dGF0ZShvcHRpb25zID0ge30pIHtcbiAgcmV0dXJuIChub2RlKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gLyoqIEB0eXBlIHtNZGFzdFJvb3R9ICovICh0b01kYXN0KG5vZGUsIG9wdGlvbnMpKVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rehype-remark/lib/index.js\n");

/***/ })

};
;